name: 'GCP App Engine deploy and version cleaner'
description: 'Action to deploy GCP App engine service and remove old versions'
inputs:
  workload_identity_provider:
    description: 'Google cloud iam Workload federation provider. ex projects/1111111/locations/global/workloadIdentityPools/github-workload/providers/deployment-provider'
    required: true

  service_account:
    description: 'The service account email to be used for authenticating using workload identity provider'
    required: true

  service_id:
    description: 'The ID of the app engine service'
    required: true

  project_id:
    description: 'The ID of the GCP project'
    required: true

  app_yaml_path:
    description: 'The path to the GCP app.yaml file'
    required: true

  extra_deploy_args:
    description: 'Extra arguments to use when deploying the application'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        project_id: ${{inputs.project_id}}
        workload_identity_provider: ${{inputs.workload_identity_provider}}
        service_account: ${{inputs.service_account}}
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
    - name: Set credentials
      shell: bash
      run: gcloud auth login --cred-file=${{steps.auth.outputs.credentials_file_path}}

    - name: Deploy App engine with ${{ inputs.app_yaml_path }}
      shell: bash
      run: gcloud --project ${{ inputs.project_id }} app deploy ${{ inputs.app_yaml_path }} ${{ inputs.extra_deploy_args }}

    - name: Remove all versions except 6 most recent ones
      shell: bash
      run: gcloud app versions list --format "value(version.id)" --sort-by "~version.createTime" --service ${{ inputs.service_id }} --project ${{ inputs.project_id }} | tail -n +6 | xargs -r gcloud app versions delete --quiet --project ${{ inputs.project_id }}
